#!/usr/bin/env perl

use v5.10;
use strict;
use warnings;
use lib 'lib';
use IPC::Open2;
use Getopt::Long;
use Data::Printer;

use Lifter;

my $botname;
my @maps;
my $verbose;
my $timeout;
my $warn_time;

my $result = GetOptions(
    'bot=s'     => \$botname,
    'verbose'   => \$verbose,
    'maps=s{,}' => \@maps,
    'time=s'    => \$timeout,
    'warn-time=i' => \$warn_time,
);

$timeout ||= 1;
$warn_time = 1 if ! $warn_time || $warn_time < 0;

my $total_score = 0;

for my $mapname ( @maps ) {
    my $world = Lifter::load_world($mapname);
    my $pid = open2(my $bot_out, my $bot_in, $botname)
      or die "Error opening bot: $!";

    my $alarm = 0;
    local $SIG{ALRM} = sub { $alarm = 1 };
    local $SIG{INT} = sub { };
    alarm $timeout; # timeout!

    while(1) {
      if ( $verbose ) {
          Lifter::print_map $world;
      }
      print $bot_in Lifter::world_to_json($world);
      print $bot_in "\n";

      my $move = <$bot_out>;
      chomp $move;
      $world = Lifter::robot_move($world, $move);
      $world = Lifter::check_ending($world);
      $world = Lifter::world_update($world);
      $world = Lifter::check_ending($world);
      print_ending($mapname, $world) && last if $world->{ending};

      if($alarm) {  
        $world->{ending} = 'TIME';
        print_ending($mapname, $world);
        last;
      }

      kill 2, $pid if ! $warn_time;
      $warn_time-- if $warn_time > 0;
    }
}

say "\nTotal score: $total_score\n";

sub print_ending {
  my $map = shift;
  my $world = shift;
  say "World: $map";
  say "Result: $world->{ending}!";
  say "Partial score: $world->{partial_score}";
  say "Bonus score: $world->{bonus_score}";
  say "Final score: $world->{score}";
  print "\n";
  $total_score += $world->{score};
  return 1;
}
